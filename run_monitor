#! /usr/bin/env python3

import monitor, mailer, os, time, logging, yaml, getopt, sys

class MonitorApp():

    def __init__(self, config):
        self.logger = logging.getLogger(__name__)
        self.logger.setLevel(logging.DEBUG)
        formatter = logging.Formatter("%(asctime)s - %(name)s - %(levelname)s - %(message)s")
        handler = logging.FileHandler(config['log']['file'])
        handler.setFormatter(formatter)
        self.logger.addHandler(handler)
        self.notifier = mailer.Mailer(config['mailer']['smtphost'])
        self.monitors = []
        for mon in config['monitors']:
            self.logger.info("Adding monitor " + mon['name'])
            self.monitors.append(monitor.Monitor(self.notifier, mon['name'], mon['host'], mon['find_string'], mon['port']))

    def run(self):
        self.logger.info("Checking monitor")
        for mon in self.monitors:
            mon.check()

if __name__ == "__main__":
    configfile = None
    try:
        opts, args = getopt.getopt(sys.argv[1:],"c:",["config="])
    except getopt.GetoptError:
        print('run_monitor -c <configfile>')
        sys.exit(2)
    for opt, arg in opts:
        if opt in ('-c', '--config'):
            configfile = arg
    if configfile == None:
        print('You must supply a config file')
        print('run_monitor -c <configfile>')
        sys.exit(2)
    with open(configfile, 'r') as ymlfile:
        config = yaml.load(ymlfile)
    monitor_app = MonitorApp(config)
    monitor_app.run()
